{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajji\\\\Desktop\\\\pi react\\\\frontend-main\\\\frontend-main\\\\src\\\\COMPONENTS\\\\Forgetpassword\\\\Forgotpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Forgetpassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgetPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\"); // New state for success message\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5001/auth/forgot-password\", {\n        email\n      });\n      setSuccessMessage(response.data.message); // Set success message\n      setMessage(\"\"); // Clear any previous error message\n      setEmail(\"\"); // Clear the input field\n    } catch (error) {\n      // Check if the error has a response and set the message accordingly\n      if (error.response && error.response.data) {\n        setMessage(error.response.data); // Display the server error message\n      } else {\n        setMessage(\"Erreur lors de l'envoi du lien de réinitialisation.\"); // Fallback message\n      }\n      setSuccessMessage(\"\"); // Clear any previous success message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"R\\xE9initialiser le Mot de Passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Entrez votre email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }, this), \" \", message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgetPassword, \"ccLxYhvcLmuOsMedlTzJkR7VXBc=\");\n_c = ForgetPassword;\nexport default ForgetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgetPassword","_s","email","setEmail","message","setMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","post","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Hajji/Desktop/pi react/frontend-main/frontend-main/src/COMPONENTS/Forgetpassword/Forgotpassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Forgetpassword.css\";\r\n\r\nconst ForgetPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // New state for success message\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5001/auth/forgot-password\", { email });\r\n      setSuccessMessage(response.data.message); // Set success message\r\n      setMessage(\"\"); // Clear any previous error message\r\n      setEmail(\"\"); // Clear the input field\r\n    } catch (error) {\r\n      // Check if the error has a response and set the message accordingly\r\n      if (error.response && error.response.data) {\r\n        setMessage(error.response.data); // Display the server error message\r\n      } else {\r\n        setMessage(\"Erreur lors de l'envoi du lien de réinitialisation.\"); // Fallback message\r\n      }\r\n      setSuccessMessage(\"\"); // Clear any previous success message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Réinitialiser le Mot de Passe</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Entrez votre email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Envoyer</button>\r\n      </form>\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>} {/* Success message */}\r\n      {message && <p className=\"message\">{message}</p>} {/* Error message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1D,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,4CAA4C,EAAE;QAAEV;MAAM,CAAC,CAAC;MAC1FK,iBAAiB,CAACI,QAAQ,CAACE,IAAI,CAACT,OAAO,CAAC,CAAC,CAAC;MAC1CC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAChBF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAE;QACzCR,UAAU,CAACS,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACLR,UAAU,CAAC,qDAAqD,CAAC,CAAC,CAAC;MACrE;MACAE,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACER,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCrB,OAAA;MAAMsB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3BjB,OAAA;QACEuB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEtB,KAAM;QACbuB,QAAQ,EAAGhB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACNd,cAAc,iBAAIP,OAAA;MAAGgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEV;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,EACvEhB,OAAO,iBAAIL,OAAA;MAAGgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEZ;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxCID,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}