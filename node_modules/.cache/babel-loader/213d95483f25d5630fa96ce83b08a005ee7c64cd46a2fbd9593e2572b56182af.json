{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hajji\\\\Desktop\\\\pi react\\\\frontend-main\\\\frontend-main\\\\src\\\\COMPONENTS\\\\Forgetpassword\\\\Forgetpassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, Alert, ActivityIndicator } from \"react-native\";\nimport axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/native\"; // Importer useNavigation\nimport './Forgetpassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigation = useNavigation(); // Initialiser useNavigation\n\n  const isValidEmail = email => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return regex.test(email);\n  };\n  const handleForgotPassword = async () => {\n    if (!email) {\n      Alert.alert(\"Erreur\", \"Veuillez entrer votre adresse e-mail\");\n      return;\n    }\n    if (!isValidEmail(email)) {\n      Alert.alert(\"Erreur\", \"Veuillez entrer une adresse e-mail valide\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"https://mon-api.com/api/forgot-password\", {\n        email\n      });\n      Alert.alert(\"Succès\", response.data.message);\n\n      // Supposons que le backend renvoie le token dans response.data.token\n      const token = response.data.token; // Récupérer le token\n      if (token) {\n        // Naviguer vers ResetPassword avec le token\n        navigation.navigate(\"ResetPassword\", {\n          token\n        });\n      }\n      setEmail(\"\"); // Réinitialiser le champ\n    } catch (error) {\n      var _error$response, _error$response$data;\n      Alert.alert(\"Erreur\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Une erreur est survenue\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Mot de passe oubli\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Entrez votre adresse e-mail\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n      style: [styles.button, isLoading && styles.buttonDisabled],\n      onPress: handleForgotPassword,\n      disabled: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(ActivityIndicator, {\n        size: \"small\",\n        color: \"#FFFFFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"R\\xE9initialiser le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"BflZgAs4yeEnJPuFn6N4BBsu5mA=\", false, function () {\n  return [useNavigation];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","View","Text","TextInput","TouchableOpacity","Alert","ActivityIndicator","axios","useNavigation","jsxDEV","_jsxDEV","ForgotPassword","email","setEmail","isLoading","setIsLoading","navigation","isValidEmail","regex","test","handleForgotPassword","alert","response","post","data","message","token","navigate","error","_error$response","_error$response$data","style","styles","container","children","title","fileName","lineNumber","columnNumber","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","button","buttonDisabled","onPress","disabled","size","color","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/Hajji/Desktop/pi react/frontend-main/frontend-main/src/COMPONENTS/Forgetpassword/Forgetpassword.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity, Alert, ActivityIndicator } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { useNavigation } from \"@react-navigation/native\"; // Importer useNavigation\r\nimport './Forgetpassword.css';;\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigation = useNavigation(); // Initialiser useNavigation\r\n\r\n  const isValidEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email);\r\n  };\r\n\r\n  const handleForgotPassword = async () => {\r\n    if (!email) {\r\n      Alert.alert(\"Erreur\", \"Veuillez entrer votre adresse e-mail\");\r\n      return;\r\n    }\r\n\r\n    if (!isValidEmail(email)) {\r\n      Alert.alert(\"Erreur\", \"Veuillez entrer une adresse e-mail valide\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post(\"https://mon-api.com/api/forgot-password\", { email });\r\n      Alert.alert(\"Succès\", response.data.message);\r\n\r\n      // Supposons que le backend renvoie le token dans response.data.token\r\n      const token = response.data.token; // Récupérer le token\r\n      if (token) {\r\n        // Naviguer vers ResetPassword avec le token\r\n        navigation.navigate(\"ResetPassword\", { token });\r\n      }\r\n\r\n      setEmail(\"\"); // Réinitialiser le champ\r\n    } catch (error) {\r\n      Alert.alert(\"Erreur\", error.response?.data?.message || \"Une erreur est survenue\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Mot de passe oublié</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Entrez votre adresse e-mail\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TouchableOpacity\r\n        style={[styles.button, isLoading && styles.buttonDisabled]}\r\n        onPress={handleForgotPassword}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\r\n        ) : (\r\n          <Text style={styles.buttonText}>Réinitialiser le mot de passe</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}