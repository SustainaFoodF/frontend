{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salma\\\\Desktop\\\\pi3\\\\frontend-sahar\\\\src\\\\COMPONENTS\\\\UserProfile\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fonction pour changer le mot de passe\n  const handleChangePassword = async () => {\n    // Vérification des champs vides\n    if (!oldPassword || !newPassword || !confirmPassword) {\n      setError(\"Tous les champs sont obligatoires.\");\n      return;\n    }\n\n    // Vérification de la correspondance des mots de passe\n    if (newPassword !== confirmPassword) {\n      setError(\"Les nouveaux mots de passe ne correspondent pas.\");\n      return;\n    }\n    try {\n      const userId = \"ID_UTILISATEUR\"; // Remplacer par l'ID de l'utilisateur connecté\n\n      console.log(\"Envoi de la requête avec userId:\", userId);\n\n      // Requête PUT pour changer le mot de passe\n      const response = await axios.put(`http://localhost:5001/auth/change-password/${userId}`, {\n        oldPassword,\n        newPassword\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Réponse du serveur:\", response.data);\n\n      // Afficher le message de succès\n      setMessage(response.data.message);\n      setError(\"\"); // Réinitialiser l'erreur\n\n      // Réinitialiser les champs de mot de passe après succès\n      setOldPassword(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error(\"Erreur lors de la requête:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Une erreur s'est produite.\");\n    }\n  };\n\n  // Effacer les messages après 5 secondes\n  useEffect(() => {\n    if (message || error) {\n      const timer = setTimeout(() => {\n        setMessage(\"\");\n        setError(\"\");\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [message, error]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accountsettings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mainhead1\",\n      children: \"Changer le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"oldpass\",\n          children: [\"Ancien mot de passe \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"oldpass\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newpass\",\n          children: [\"Nouveau mot de passe \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newpass\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpass\",\n          children: [\"Confirmer le mot de passe \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmpass\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mainbutton1\",\n      onClick: handleChangePassword,\n      children: \"Enregistrer les modifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(ChangePassword, \"ABtGQKB1ImBXsCkTudXcCnlpDkY=\");\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChangePassword","_s","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleChangePassword","userId","console","log","response","put","headers","data","err","_err$response","_err$response2","_err$response2$data","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","htmlFor","type","id","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Salma/Desktop/pi3/frontend-sahar/src/COMPONENTS/UserProfile/ChangePassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ChangePassword = () => {\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    // Fonction pour changer le mot de passe\n    const handleChangePassword = async () => {\n        // Vérification des champs vides\n        if (!oldPassword || !newPassword || !confirmPassword) {\n            setError(\"Tous les champs sont obligatoires.\");\n            return;\n        }\n\n        // Vérification de la correspondance des mots de passe\n        if (newPassword !== confirmPassword) {\n            setError(\"Les nouveaux mots de passe ne correspondent pas.\");\n            return;\n        }\n\n        try {\n            const userId = \"ID_UTILISATEUR\"; // Remplacer par l'ID de l'utilisateur connecté\n\n            console.log(\"Envoi de la requête avec userId:\", userId);\n\n            // Requête PUT pour changer le mot de passe\n            const response = await axios.put(\n                `http://localhost:5001/auth/change-password/${userId}`,\n                { oldPassword, newPassword },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            console.log(\"Réponse du serveur:\", response.data);\n\n            // Afficher le message de succès\n            setMessage(response.data.message);\n            setError(\"\"); // Réinitialiser l'erreur\n\n            // Réinitialiser les champs de mot de passe après succès\n            setOldPassword(\"\");\n            setNewPassword(\"\");\n            setConfirmPassword(\"\");\n        } catch (err) {\n            console.error(\"Erreur lors de la requête:\", err.response?.data || err.message);\n            setError(err.response?.data?.message || \"Une erreur s'est produite.\");\n        }\n    };\n\n    // Effacer les messages après 5 secondes\n    useEffect(() => {\n        if (message || error) {\n            const timer = setTimeout(() => {\n                setMessage(\"\");\n                setError(\"\");\n            }, 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [message, error]);\n\n    return (\n        <div className=\"accountsettings\">\n            <h1 className=\"mainhead1\">Changer le mot de passe</h1>\n\n            {/* Affichage des messages d'erreur ou de succès */}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {message && <p style={{ color: 'green' }}>{message}</p>}\n\n            <div className=\"form\">\n                {/* Champ pour l'ancien mot de passe */}\n                <div className=\"form-group\">\n                    <label htmlFor=\"oldpass\">Ancien mot de passe <span>*</span></label>\n                    <input\n                        type=\"password\"\n                        id=\"oldpass\"\n                        value={oldPassword}\n                        onChange={(e) => setOldPassword(e.target.value)}\n                        required\n                    />\n                </div>\n\n                {/* Champ pour le nouveau mot de passe */}\n                <div className=\"form-group\">\n                    <label htmlFor=\"newpass\">Nouveau mot de passe <span>*</span></label>\n                    <input\n                        type=\"password\"\n                        id=\"newpass\"\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                        required\n                    />\n                </div>\n\n                {/* Champ pour confirmer le mot de passe */}\n                <div className=\"form-group\">\n                    <label htmlFor=\"confirmpass\">Confirmer le mot de passe <span>*</span></label>\n                    <input\n                        type=\"password\"\n                        id=\"confirmpass\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        required\n                    />\n                </div>\n            </div>\n\n            {/* Bouton pour envoyer la demande de changement de mot de passe */}\n            <button className=\"mainbutton1\" onClick={handleChangePassword}>\n                Enregistrer les modifications\n            </button>\n        </div>\n    );\n};\n\nexport default ChangePassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}