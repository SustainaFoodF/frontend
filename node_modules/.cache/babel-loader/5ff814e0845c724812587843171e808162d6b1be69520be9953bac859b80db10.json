{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajji\\\\Desktop\\\\pi react\\\\frontend-main\\\\frontend-main\\\\src\\\\COMPONENTS\\\\Resetpassword\\\\Resetpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\"; // Import useParams\nimport \"./Resetpassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Get the token from the URL\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  console.log(\"Token retrieved from URL:\", token); // Log the token\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"New password entered:\", newPassword); // Log the new password\n\n    try {\n      const response = await axios.post(`http://localhost:5001/auth/reset-password/${token}`,\n      // Use the token here\n      {\n        password\n      });\n      console.log(\"Response from server:\", response.data); // Log the server response\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error(\"Error during password reset:\", error); // Log the error\n      setMessage(\"Erreur lors de la réinitialisation du mot de passe.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"R\\xE9initialiser le Mot de Passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Entrez votre nouveau mot de passe\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"R\\xE9initialiser le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"dBiSlhJ56cgZ8zbZg48OoD0WtD8=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","token","newPassword","setNewPassword","message","setMessage","console","log","handleSubmit","e","preventDefault","response","post","password","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Hajji/Desktop/pi react/frontend-main/frontend-main/src/COMPONENTS/Resetpassword/Resetpassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\"; // Import useParams\r\nimport \"./Resetpassword.css\";\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams(); // Get the token from the URL\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  console.log(\"Token retrieved from URL:\", token); // Log the token\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"New password entered:\", newPassword); // Log the new password\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5001/auth/reset-password/${token}`, // Use the token here\r\n        { password }\r\n      );\r\n      console.log(\"Response from server:\", response.data); // Log the server response\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      console.error(\"Error during password reset:\", error); // Log the error\r\n      setMessage(\"Erreur lors de la réinitialisation du mot de passe.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Réinitialiser le Mot de Passe</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Entrez votre nouveau mot de passe\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Réinitialiser le mot de passe</button>\r\n      </form>\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAC9C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CY,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEN,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,WAAW,CAAC,CAAC,CAAC;;IAEnD,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,6CAA6CX,KAAK,EAAE;MAAE;MACtD;QAAEY;MAAS,CACb,CAAC;MACDP,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACrDT,UAAU,CAACM,QAAQ,CAACG,IAAI,CAACV,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC,CAAC;MACtDV,UAAU,CAAC,qDAAqD,CAAC;IACnE;EACF,CAAC;EAED,oBACEP,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAAmB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCvB,OAAA;MAAMwB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BnB,OAAA;QACEyB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,mCAAmC;QAC/CC,KAAK,EAAEvB,WAAY;QACnBwB,QAAQ,EAAGjB,CAAC,IAAKN,cAAc,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAChDG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFvB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EACNjB,OAAO,iBAAIN,OAAA;MAAGkB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEb;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxCID,aAAa;EAAA,QACCH,SAAS;AAAA;AAAAiC,EAAA,GADvB9B,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}