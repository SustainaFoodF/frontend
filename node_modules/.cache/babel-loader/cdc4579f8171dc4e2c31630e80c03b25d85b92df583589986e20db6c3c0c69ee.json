{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahar\\\\Downloads\\\\frontend-ForgotReset2FALOGIC\\\\frontend-ForgotReset2FALOGIC\\\\src\\\\COMPONENTS\\\\UserProfile\\\\UserAddress.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './UserAddress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserAddress = ({\n  userId\n}) => {\n  _s();\n  // State variables\n  const [show, setShow] = useState(false); // Controls the visibility of the address form\n  const [savedAddresses, setSavedAddresses] = useState([]); // Stores the fetched addresses\n  const [formData, setFormData] = useState({\n    street: '',\n    postalCode: '',\n    city: '',\n    country: ''\n  }); // Stores form data for adding/editing addresses\n  const [editId, setEditId] = useState(null); // Tracks the address being edited\n  const [loading, setLoading] = useState(false); // Tracks loading state\n  const [error, setError] = useState(''); // Stores error messages\n\n  // Fetch addresses when the component mounts or when userId changes\n  useEffect(() => {\n    if (userId) {\n      fetchAddresses();\n      console.log(\"User ID:\", userId);\n    } else {\n      setError(\"User ID is missing\");\n    }\n  }, [userId]);\n\n  // Function to fetch addresses from the backend\n  const fetchAddresses = async () => {\n    if (!userId) {\n      setError(\"User ID is missing\");\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get(`http://localhost:5001/users/${userId}/addresses`);\n      console.log(\"Addresses fetched:\", response.data.addresses);\n      setSavedAddresses(response.data.addresses); // Update state with fetched addresses\n    } catch (err) {\n      setError('Failed to fetch addresses');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle input changes in the form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Save or update an address\n  const handleSaveAddress = async () => {\n    if (!userId) {\n      setError(\"User ID is missing\");\n      return;\n    }\n\n    // Validate required fields\n    if (!formData.street || !formData.postalCode || !formData.city || !formData.country) {\n      setError('Required fields are missing');\n      return;\n    }\n    setLoading(true);\n    setError(''); // Clear previous errors\n    try {\n      let response;\n      if (editId) {\n        // Update an existing address\n        response = await axios.put(`http://localhost:5001/users/${userId}/addresses/${editId}`, formData);\n      } else {\n        // Add a new address\n        response = await axios.post(`http://localhost:5001/users/${userId}/addresses`, formData);\n      }\n      if (response.data.success) {\n        fetchAddresses(); // Refresh the address list\n        setShow(false); // Hide the form\n        setFormData({\n          // Reset form data\n          street: '',\n          postalCode: '',\n          city: '',\n          country: ''\n        });\n        setEditId(null); // Clear edit ID\n      } else {\n        setError('Failed to save address: ' + response.data.message);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to save address: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete an address\n  const handleDeleteAddress = async id => {\n    if (!userId) {\n      setError(\"User ID is missing\");\n      return;\n    }\n    setLoading(true);\n    setError(''); // Clear previous errors\n    try {\n      await axios.delete(`http://localhost:5001/users/${userId}/addresses/${id}`);\n      fetchAddresses(); // Refresh the address list\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to delete address: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Edit an address\n  const handleEditAddress = address => {\n    setFormData(address); // Populate the form with the address data\n    setEditId(address._id); // Set the address ID being edited\n    setShow(true); // Show the form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"useraddress\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this), !show && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mainhead1\",\n      children: \"Your Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }, this), !show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addressin\",\n      children: savedAddresses.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.street\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.postalCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delbtn\",\n          onClick: () => handleDeleteAddress(item._id),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editbtn\",\n          onClick: () => handleEditAddress(item),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), !show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addnewbtn\",\n      onClick: () => setShow(true),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        strokeWidth: 1.5,\n        stroke: \"currentColor\",\n        className: \"w-6 h-6\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          d: \"M12 4.5v15m7.5-7.5h-15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addnew\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mainhead1\",\n        children: editId ? 'Edit Address' : 'Add New Address'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"street\",\n            value: formData.street,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"postalCode\",\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"postalCode\",\n            value: formData.postalCode,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            value: formData.city,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"country\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"country\",\n            value: formData.country,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainbutton1\",\n        onClick: handleSaveAddress,\n        children: editId ? 'Update' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainbutton1\",\n        onClick: () => setShow(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(UserAddress, \"SWgQpJFRYYip38oh1RLQsjc3lSk=\");\n_c = UserAddress;\nexport default UserAddress;\nvar _c;\n$RefreshReg$(_c, \"UserAddress\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","UserAddress","userId","_s","show","setShow","savedAddresses","setSavedAddresses","formData","setFormData","street","postalCode","city","country","editId","setEditId","loading","setLoading","error","setError","fetchAddresses","console","log","response","get","data","addresses","err","handleInputChange","e","name","value","target","handleSaveAddress","put","post","success","message","_err$response","_err$response$data","handleDeleteAddress","id","delete","_err$response2","_err$response2$data","handleEditAddress","address","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","htmlFor","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/sahar/Downloads/frontend-ForgotReset2FALOGIC/frontend-ForgotReset2FALOGIC/src/COMPONENTS/UserProfile/UserAddress.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './UserAddress.css'; \n\nconst UserAddress = ({ userId }) => {\n    // State variables\n    const [show, setShow] = useState(false); // Controls the visibility of the address form\n    const [savedAddresses, setSavedAddresses] = useState([]); // Stores the fetched addresses\n    const [formData, setFormData] = useState({\n        street: '',\n        postalCode: '',\n        city: '',\n        country: ''\n    }); // Stores form data for adding/editing addresses\n    const [editId, setEditId] = useState(null); // Tracks the address being edited\n    const [loading, setLoading] = useState(false); // Tracks loading state\n    const [error, setError] = useState(''); // Stores error messages\n\n    // Fetch addresses when the component mounts or when userId changes\n    useEffect(() => {\n        if (userId) {\n            fetchAddresses();\n            console.log(\"User ID:\", userId);\n        } else {\n            setError(\"User ID is missing\");\n        }\n    }, [userId]);\n\n    // Function to fetch addresses from the backend\n    const fetchAddresses = async () => {\n        if (!userId) {\n            setError(\"User ID is missing\");\n            return;\n        }\n    \n        setLoading(true);\n        setError('');\n        try {\n            const response = await axios.get(`http://localhost:5001/users/${userId}/addresses`);\n            console.log(\"Addresses fetched:\", response.data.addresses);\n            setSavedAddresses(response.data.addresses); // Update state with fetched addresses\n        } catch (err) {\n            setError('Failed to fetch addresses');\n            console.error(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle input changes in the form\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    // Save or update an address\n    const handleSaveAddress = async () => {\n        if (!userId) {\n            setError(\"User ID is missing\");\n            return;\n        }\n\n        // Validate required fields\n        if (!formData.street || !formData.postalCode || !formData.city || !formData.country) {\n            setError('Required fields are missing');\n            return;\n        }\n\n        setLoading(true);\n        setError(''); // Clear previous errors\n        try {\n            let response;\n            if (editId) {\n                // Update an existing address\n                response = await axios.put(`http://localhost:5001/users/${userId}/addresses/${editId}`, formData);\n            } else {\n                // Add a new address\n                response = await axios.post(`http://localhost:5001/users/${userId}/addresses`, formData);\n            }\n\n            if (response.data.success) {\n                fetchAddresses(); // Refresh the address list\n                setShow(false); // Hide the form\n                setFormData({ // Reset form data\n                    street: '',\n                    postalCode: '',\n                    city: '',\n                    country: ''\n                });\n                setEditId(null); // Clear edit ID\n            } else {\n                setError('Failed to save address: ' + response.data.message);\n            }\n        } catch (err) {\n            setError('Failed to save address: ' + (err.response?.data?.message || err.message));\n            console.error(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Delete an address\n    const handleDeleteAddress = async (id) => {\n        if (!userId) {\n            setError(\"User ID is missing\");\n            return;\n        }\n\n        setLoading(true);\n        setError(''); // Clear previous errors\n        try {\n            await axios.delete(`http://localhost:5001/users/${userId}/addresses/${id}`);\n            fetchAddresses(); // Refresh the address list\n        } catch (err) {\n            setError('Failed to delete address: ' + (err.response?.data?.message || err.message));\n            console.error(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Edit an address\n    const handleEditAddress = (address) => {\n        setFormData(address); // Populate the form with the address data\n        setEditId(address._id); // Set the address ID being edited\n        setShow(true); // Show the form\n    };\n\n    return (\n        <div className='useraddress'>\n            {loading && <p>Loading...</p>}\n            {error && <p className='error'>{error}</p>}\n\n            {/* Display the list of addresses */}\n            {!show && <h1 className='mainhead1'>Your Address</h1>}\n            {!show && (\n                <div className='addressin'>\n                    {savedAddresses.map((item) => (\n                        <div className='address' key={item._id}>\n                            <span>{item.street}</span>,\n                            <span>{item.postalCode}</span>,\n                            <span>{item.city}</span>,\n                            <span>{item.country}</span>\n                            <div className='delbtn' onClick={() => handleDeleteAddress(item._id)}>\n                                {/* Delete button SVG */}\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </div>\n                            <div className='editbtn' onClick={() => handleEditAddress(item)}>\n                                {/* Edit button SVG */}\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\" />\n                                </svg>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )}\n\n            {/* Button to add a new address */}\n            {!show && (\n                <div className='addnewbtn' onClick={() => setShow(true)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                    </svg>\n                </div>\n            )}\n\n            {/* Form for adding/editing an address */}\n            {show && (\n                <div className='addnew'>\n                    <h1 className='mainhead1'>{editId ? 'Edit Address' : 'Add New Address'}</h1>\n                    <div className='form'>\n                        <div className='form-group'>\n                            <label htmlFor='street'>Street</label>\n                            <input\n                                type=\"text\"\n                                name=\"street\"\n                                value={formData.street}\n                                onChange={handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='postalCode'>Postal Code</label>\n                            <input\n                                type=\"text\"\n                                name=\"postalCode\"\n                                value={formData.postalCode}\n                                onChange={handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='city'>City</label>\n                            <input\n                                type=\"text\"\n                                name=\"city\"\n                                value={formData.city}\n                                onChange={handleInputChange}\n                                required\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='country'>Country</label>\n                            <input\n                                type=\"text\"\n                                name=\"country\"\n                                value={formData.country}\n                                onChange={handleInputChange}\n                                required\n                            />\n                        </div>\n                    </div>\n                    <button className='mainbutton1' onClick={handleSaveAddress}>\n                        {editId ? 'Update' : 'Save'}\n                    </button>\n                    <button className='mainbutton1' onClick={() => setShow(false)}>\n                        Cancel\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UserAddress;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}